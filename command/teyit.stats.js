const { EmbedBuilder, ActionRowBuilder, StringSelectMenuBuilder } = require("discord.js");
const db = require("croxydb");
const set = require("../ayarlar/setting");
let emoji = require("../ayarlar/emojis.json");
const { Footer } = require("../config");

exports.run = async (client, message, args) => {
    if (!message.member.roles.cache.has(set.registerYetkili) && !message.member.permissions.has("Administrator")) {
        return message.reply({ 
            content: `${emoji.red} **Bu komutu kullanmak iÃ§in yetkin bulunmamaktadÄ±r!**` 
        }).then(e => setTimeout(() => { if (e.deletable) e.delete(); }, 10000));
    }

    const erkek = db.fetch(`yetkili.${message.author.id}.erkek`) || "0";
    const kadÄ±n = db.fetch(`yetkili.${message.author.id}.kadÄ±n`) || "0";
    const kayÄ±tlar = db.fetch(`yetkili.${message.author.id}.toplam`) || "0";

    const kayÄ±tEmbed = new EmbedBuilder()
    .setAuthor({ name: "ğŸ“‹ KayÄ±t Bilgileri", iconURL: message.author.displayAvatarURL({ dynamic: true }) })
    .setColor("#2F3136")
    .setThumbnail("https://cdn-icons-png.flaticon.com/512/1828/1828640.png") // Buraya hoÅŸ bir ikon ekledim
    .setDescription(`
    ğŸ‘¤ **Yetkili:** ${message.author}  
    ğŸ“Œ **Toplam KayÄ±t SayÄ±sÄ±:** \`${kayÄ±tlar}\`  
    ğŸ‘¨ **Erkek KayÄ±t SayÄ±sÄ±:** \`${erkek}\`  
    ğŸ‘© **KadÄ±n KayÄ±t SayÄ±sÄ±:** \`${kadÄ±n}\`  
    
    ğŸ”½ **AÅŸaÄŸÄ±daki menÃ¼den detaylarÄ± gÃ¶rÃ¼ntÃ¼leyebilirsin!**
    `)
    .setFooter({ text: Footer, iconURL: client.user.displayAvatarURL() });

const kayÄ±tMenu = new StringSelectMenuBuilder()
    .setCustomId("kayÄ±t_bilgi")
    .setPlaceholder("ğŸ“Š KayÄ±t bilgilerini gÃ¶rÃ¼ntÃ¼lemek iÃ§in seÃ§im yap!")
    .addOptions([
        { label: "ğŸ“Œ Toplam KayÄ±t", value: "toplam", description: `Toplam: ${kayÄ±tlar}`, emoji: "ğŸ“Œ" },
        { label: "ğŸ‘¨ Erkek KayÄ±tlar", value: "erkek", description: `Erkek: ${erkek}`, emoji: "ğŸ‘¨" },
        { label: "ğŸ‘© KadÄ±n KayÄ±tlar", value: "kadÄ±n", description: `KadÄ±n: ${kadÄ±n}`, emoji: "ğŸ‘©" }
    ]);

const row = new ActionRowBuilder().addComponents(kayÄ±tMenu);

const msg = await message.reply({ embeds: [kayÄ±tEmbed], components: [row] });

const filter = (interaction) => interaction.isStringSelectMenu() && interaction.customId === "kayÄ±t_bilgi";
const collector = msg.createMessageComponentCollector({ filter, time: 60000 });

collector.on("collect", async (interaction) => {
    if (interaction.user.id !== message.author.id) {
        return interaction.reply({ content: `${emoji.red} **Bu menÃ¼yÃ¼ kullanma yetkin yok!**`, ephemeral: true });
    }

    let updatedEmbed = new EmbedBuilder().setColor("#2F3136").setFooter({ text: Footer, iconURL: client.user.displayAvatarURL() });

    if (interaction.values[0] === "toplam") {
        updatedEmbed.setTitle("ğŸ“Œ Toplam KayÄ±t SayÄ±sÄ±").setDescription(`ğŸ“Š **Toplam KayÄ±t SayÄ±sÄ±:** \`${kayÄ±tlar}\``);
    } else if (interaction.values[0] === "erkek") {
        updatedEmbed.setTitle("ğŸ‘¨ Erkek KayÄ±t SayÄ±sÄ±").setDescription(`ğŸ‘¨ **Erkek KayÄ±t SayÄ±sÄ±:** \`${erkek}\``);
    } else if (interaction.values[0] === "kadÄ±n") {
        updatedEmbed.setTitle("ğŸ‘© KadÄ±n KayÄ±t SayÄ±sÄ±").setDescription(`ğŸ‘© **KadÄ±n KayÄ±t SayÄ±sÄ±:** \`${kadÄ±n}\``);
    }

    await interaction.update({ embeds: [updatedEmbed], components: [row] });
});

collector.on("end", () => {
    msg.edit({ components: [] }).catch(() => {});
});
};

exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ["kayÄ±tsayÄ±", "kayÄ±tbilgi"]
};

exports.help = {
    name: "kayÄ±t-sayÄ±",
    description: "KullanÄ±cÄ±nÄ±n kayÄ±t bilgilerini gÃ¶rÃ¼ntÃ¼ler.",
    usage: "!kayÄ±t-sayÄ±"
};
